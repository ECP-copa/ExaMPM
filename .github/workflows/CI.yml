name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 5 * * MON'

jobs:
  CI:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        backend: ["SERIAL", "OPENMP"]
        output: ['HDF5']
        include:
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            backend: 'SERIAL'
            cmake_build_type: 'Debug'
            output: 'SILO'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            backend: 'SERIAL'
            cmake_build_type: 'Debug'
            output: 'NONE'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            backend: 'SERIAL'
            cmake_build_type: 'Debug'
            output: 'BOTH'
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y libsilo-dev 
      - name: Checkout kokkos
        uses: actions/checkout@v2.2.0
        with:
          repository: kokkos/kokkos
          ref: 3.7.02
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=$HOME/kokkos -DKokkos_CXX_STANDARD=14 -DKokkos_ENABLE_${{ matrix.backend }}=ON
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v2.2.0
        with:
          repository: ECP-copa/Cabana
          ref: 0.6.1
          path: Cabana
      - name: Build Cabana
        working-directory: Cabana
        run: |
          if [[ ${{ matrix.output }} == 'HDF5' ]]; then
            cabana_cmake_opts+=( -DCabana_REQUIRE_HDF5=ON -DCMAKE_DISABLE_FIND_PACKAGE_SILO=ON )
          elif [[ ${{ matrix.output }} == 'SILO' ]]; then
            cabana_cmake_opts+=( -DCabana_REQUIRE_SILO=ON -DCMAKE_DISABLE_FIND_PACKAGE_HDF5=ON )
          elif [[ ${{ matrix.output }} == 'BOTH' ]]; then
            cabana_cmake_opts+=( -DCabana_REQUIRE_SILO=ON -DCabana_REQUIRE_HDF5=ON )
          else
            cabana_cmake_opts+=( -DCMAKE_DISABLE_FIND_PACKAGE_SILO=ON -DCMAKE_DISABLE_FIND_PACKAGE_HDF5=ON )
          fi
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/Cabana \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos" \
            -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror" \
            -DCabana_REQUIRE_${{ matrix.backend }}=ON \
            ${cabana_cmake_opts[@]}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout code
        uses: actions/checkout@v2.2.0
      - name: Build
        run: |
          cmake -B build -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/Cabana" -DCMAKE_INSTALL_PREFIX=$HOME/exampm
          cmake --build build --parallel 2
          cmake --install build
      - name: Test ExaMPM
        run: |
           $HOME/exampm/bin/DamBreak 0.05 2 0 0.001 0.25 100 ${{ matrix.backend }}
           $HOME/exampm/bin/FreeFall 0.05 2 0 0.001 0.25 100 ${{ matrix.backend }}
